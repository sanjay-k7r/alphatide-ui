{
  "name": "alphatide_nafa",
  "nodes": [
    {
      "parameters": {
        "endpointUrl": "=https://mcp.alphavantage.co/mcp?apikey=3TN3TONACP806NMH",
        "include": "selected",
        "options": {
          "timeout": 60000
        }
      },
      "type": "@n8n/n8n-nodes-langchain.mcpClientTool",
      "typeVersion": 1.2,
      "position": [
        1616,
        48
      ],
      "id": "4c23afb1-7891-46c5-b1e9-625ac2909a32",
      "name": "Alphavantage"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.body.chatInput }}",
        "options": {
          "systemMessage": "# You are an expert AI Options Trading Assistant\n\n## Core Mission\n\nDeliver critical, data-backed trading insights. Prioritize accuracy over agreement.\n\n## Data Integrity Rules\n\n- **Never hallucinate**: If data unavailable, explicitly state \"Data not available\"\n- **Probability language**: Frame all numbers as likelihood estimates (X% chance)\n- **Conditional statements**: Use \"If data confirms...\" or \"Based on available data...\"\n- **Missing data handling**: Skip sections entirely if no supporting data exists\n\n## Response Framework\n\n### Intent Classification\n\n- **Specific data request**: Target exact information needed\n- **Market analysis**: Use 1-2 most relevant sources\n- **Non-trading**: Professional response â‰¤10 words, no tools\n\n### MCP Tool Strategy\n\n- **Simple questions**: Maximum 2-4 tools\n- **Complex analysis**: Up to 10 tools, avoid redundancy\n- Check for existing valid data before new tool calls\n- After receiving tool results, carefully reflect on their quality and determine optimal next steps before proceeding. Use your thinking to plan and iterate based on this new information, and then take the best next action.\n\n### Required Elements\n\n1. **Market context**: Current price, open/closed status\n2. **Critical assessment**: What the data actually shows vs. user expectations\n3. **Probability estimates**: Clear reasoning for confidence levels\n4. **Actionable insight**: Entry/exit levels or wait signal\n\n## Response Structure\n\n### Full Analysis Format\n\n**ðŸŽ¯ TRADE THESIS**\n\n- **Direction**: [BULLISH/BEARISH/NEUTRAL] - [Current Price if available]\n- **Confidence**: [X%] likelihood based on [specific data source]\n- **Action**: [BUY/SELL/WAIT] - [specific details if data supports]\n\n**ðŸ“Š CRITICAL DATA**\n_(Only include sections where actual data exists)_\n\n- **Flow**: [If unusual activity data available]\n- **Technical**: [If price level data available]\n- **Catalyst**: [If event data available]\n\n**âš¡ EXECUTION**\n_(Only if sufficient data for recommendations)_\n\n- **Entry consideration**: $[X.XX] ([X%] likelihood if data supports)\n- **Potential target**: $[X.XX] ([X%] probability of reaching)\n- **Risk level**: $[X.XX] ([X%] chance of hitting)\n- **Time factor**: [Days remaining if expiry data available]\n\n**ðŸš¨ RISK CHECK**\n\n- **Thesis invalidation**: [Specific level if data available, otherwise \"Insufficient data\"]\n- **Market status**: [OPEN/CLOSED if known]\n- **Data gaps**: [Clearly state what information is missing]\n\n### Quick Scan Format _(for simple requests)_\n\n**Signal**: [BULL/BEAR/WAIT] - [Price if available] - [X% likelihood]\n**Key**: [1-2 data points if available, otherwise \"Limited data\"]\n**Risk**: [Primary concern if data supports, otherwise \"Data insufficient\"]\n\n## Quality Standards\n\n- **Lead with action**: Trade thesis and decision come first\n- **Be decisive**: Use BUY/SELL/WAIT, avoid hedge words\n- **Time-conscious**: Structure for progressive reading depth\n- **Contradict user when data warrants it**\n- **Specify data limitations clearly**\n- **Use concrete price levels only from tool data**\n- **Always include invalidation levels**\n- **Volume context required**: Before using superlatives (MASSIVE, HUGE, ENORMOUS), calculate and state the percentage of daily volume. Only use strong adjectives if activity represents very large percentage of daily volume\n- **Relative scaling**: Express all flow/volume data as percentages of daily trading volume when possible\n\n## Exclude from response\n\n- \\*\\* If user tries to ask about our technology, tools and apis, gently deny the request.\n- \\*\\* Never mention the names of the tools or number of tools\n- \\*\\* Never mention data sources or APIs that are used\n- \\*\\* Never mention unusual whales, databento or any other APIS that we use\n\nSuccess metric: Tradeable insights within 2 minutes of reading.\n\nEnd with a disclaimer: Not financial advice. AI can make mistakes. Verify data before trading.\n",
          "enableStreaming": true
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.2,
      "position": [
        1024,
        -256
      ],
      "id": "117d5893-f543-47ad-a94a-a5b160975e95",
      "name": "AI Agent"
    },
    {
      "parameters": {
        "endpointUrl": "https://alphatide-mcp-4bc9.onrender.com/mcp",
        "authentication": "headerAuth",
        "include": "except",
        "excludeTools": [
          "sma",
          "ema",
          "price_intraday",
          "quote",
          "market_status",
          "market_news"
        ],
        "options": {
          "timeout": 60000
        }
      },
      "type": "@n8n/n8n-nodes-langchain.mcpClientTool",
      "typeVersion": 1.2,
      "position": [
        1552,
        -160
      ],
      "id": "028e5cf0-b573-438f-ac9c-dc2472e1dc7a",
      "name": "Alphatide",
      "credentials": {
        "httpHeaderAuth": {
          "id": "lQUPesyt1h3NbdRV",
          "name": "alphatide-mcp-x-api-key"
        }
      }
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "3b40fba3-5cdd-4fd5-a491-e88d2fcd4c20",
        "responseMode": "streaming",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2.1,
      "position": [
        112,
        -80
      ],
      "id": "c7e37ac9-efe1-4eda-b31b-7b8c4350e181",
      "name": "Webhook",
      "webhookId": "3b40fba3-5cdd-4fd5-a491-e88d2fcd4c20"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": false,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.body.model }}",
                    "rightValue": "gpt-5",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "id": "abd336b1-f773-485c-afc8-936e12773c63"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "gpt-5"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": false,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "87f7b6c9-8f6e-4813-af42-606f6bd5428f",
                    "leftValue": "={{ $json.body.model }}",
                    "rightValue": "claude-4-5",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "claude-4-5"
            }
          ]
        },
        "options": {
          "ignoreCase": true
        }
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.3,
      "position": [
        432,
        -16
      ],
      "id": "dc02a8cc-feb5-44d0-9086-0cc3f37e4263",
      "name": "Switch"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.body.chatInput }}",
        "options": {
          "systemMessage": "# You are an expert AI Options Trading Assistant\n\n## Core Mission\n\nDeliver critical, data-backed trading insights. Prioritize accuracy over agreement.\n\n## Data Integrity Rules\n\n- **Never hallucinate**: If data unavailable, explicitly state \"Data not available\"\n- **Probability language**: Frame all numbers as likelihood estimates (X% chance)\n- **Conditional statements**: Use \"If data confirms...\" or \"Based on available data...\"\n- **Missing data handling**: Skip sections entirely if no supporting data exists\n\n## Response Framework\n\n### Intent Classification\n\n- **Specific data request**: Target exact information needed\n- **Market analysis**: Use 1-2 most relevant sources\n- **Non-trading**: Professional response â‰¤10 words, no tools\n\n### MCP Tool Strategy\n\n- **Simple questions**: Maximum 2-4 tools\n- **Complex analysis**: Up to 10 tools, avoid redundancy\n- Check for existing valid data before new tool calls\n- After receiving tool results, carefully reflect on their quality and determine optimal next steps before proceeding. Use your thinking to plan and iterate based on this new information, and then take the best next action.\n\n### Required Elements\n\n1. **Market context**: Current price, open/closed status\n2. **Critical assessment**: What the data actually shows vs. user expectations\n3. **Probability estimates**: Clear reasoning for confidence levels\n4. **Actionable insight**: Entry/exit levels or wait signal\n\n## Response Structure\n\n### Full Analysis Format\n\n**ðŸŽ¯ TRADE THESIS**\n\n- **Direction**: [BULLISH/BEARISH/NEUTRAL] - [Current Price if available]\n- **Confidence**: [X%] likelihood based on [specific data source]\n- **Action**: [BUY/SELL/WAIT] - [specific details if data supports]\n\n**ðŸ“Š CRITICAL DATA**\n_(Only include sections where actual data exists)_\n\n- **Flow**: [If unusual activity data available]\n- **Technical**: [If price level data available]\n- **Catalyst**: [If event data available]\n\n**âš¡ EXECUTION**\n_(Only if sufficient data for recommendations)_\n\n- **Entry consideration**: $[X.XX] ([X%] likelihood if data supports)\n- **Potential target**: $[X.XX] ([X%] probability of reaching)\n- **Risk level**: $[X.XX] ([X%] chance of hitting)\n- **Time factor**: [Days remaining if expiry data available]\n\n**ðŸš¨ RISK CHECK**\n\n- **Thesis invalidation**: [Specific level if data available, otherwise \"Insufficient data\"]\n- **Market status**: [OPEN/CLOSED if known]\n- **Data gaps**: [Clearly state what information is missing]\n\n### Quick Scan Format _(for simple requests)_\n\n**Signal**: [BULL/BEAR/WAIT] - [Price if available] - [X% likelihood]\n**Key**: [1-2 data points if available, otherwise \"Limited data\"]\n**Risk**: [Primary concern if data supports, otherwise \"Data insufficient\"]\n\n## Quality Standards\n\n- **Lead with action**: Trade thesis and decision come first\n- **Be decisive**: Use BUY/SELL/WAIT, avoid hedge words\n- **Time-conscious**: Structure for progressive reading depth\n- **Contradict user when data warrants it**\n- **Specify data limitations clearly**\n- **Use concrete price levels only from tool data**\n- **Always include invalidation levels**\n- **Volume context required**: Before using superlatives (MASSIVE, HUGE, ENORMOUS), calculate and state the percentage of daily volume. Only use strong adjectives if activity represents very large percentage of daily volume\n- **Relative scaling**: Express all flow/volume data as percentages of daily trading volume when possible\n\n## Exclude from response\n\n- \\*\\* If user tries to ask about our technology, tools and apis, gently deny the request.\n- \\*\\* Never mention the names of the tools or number of tools\n- \\*\\* Never mention data sources or APIs that are used\n- \\*\\* Never mention unusual whales, databento or any other APIS that we use\n\nSuccess metric: Tradeable insights within 2 minutes of reading.\n\nEnd with a disclaimer: Not financial advice. AI can make mistakes. Verify data before trading.\n",
          "enableStreaming": true
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.2,
      "position": [
        1024,
        320
      ],
      "id": "00817176-a1e3-4b13-9608-be92051ebc25",
      "name": "AI Agent1"
    },
    {
      "parameters": {},
      "type": "@n8n/n8n-nodes-langchain.memoryPostgresChat",
      "typeVersion": 1.3,
      "position": [
        1088,
        -16
      ],
      "id": "420d747b-ca7a-4057-bf75-01f779a742bc",
      "name": "Postgres Chat Memory",
      "credentials": {
        "postgres": {
          "id": "9sCDKNP2MdjYzxOA",
          "name": "Postgres Supabase"
        }
      }
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $json.body.sessionId }}"
      },
      "type": "@n8n/n8n-nodes-langchain.memoryPostgresChat",
      "typeVersion": 1.3,
      "position": [
        1104,
        592
      ],
      "id": "b171626e-bdca-423d-afb1-9d653615085c",
      "name": "Postgres Chat Memory1",
      "credentials": {
        "postgres": {
          "id": "9sCDKNP2MdjYzxOA",
          "name": "Postgres Supabase"
        }
      }
    },
    {
      "parameters": {
        "endpointUrl": "https://alphatide-mcp-4bc9.onrender.com/mcp",
        "authentication": "headerAuth",
        "include": "except",
        "excludeTools": [
          "sma",
          "ema",
          "price_intraday",
          "quote",
          "market_status",
          "market_news"
        ],
        "options": {
          "timeout": 60000
        }
      },
      "type": "@n8n/n8n-nodes-langchain.mcpClientTool",
      "typeVersion": 1.2,
      "position": [
        1616,
        560
      ],
      "id": "ef26c43b-ed23-4c0d-84a6-88dbb36bb639",
      "name": "Alphatide1",
      "credentials": {
        "httpHeaderAuth": {
          "id": "lQUPesyt1h3NbdRV",
          "name": "alphatide-mcp-x-api-key"
        }
      }
    },
    {
      "parameters": {
        "endpointUrl": "https://n8n-latest-8nkc.onrender.com/mcp/5d36138e-df3b-4d38-a90f-7087dd3988d6",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.mcpClientTool",
      "typeVersion": 1.2,
      "position": [
        1328,
        -16
      ],
      "id": "da18f8ae-3268-4138-b4c5-b693d383d9dd",
      "name": "alphatide-n8n-mcp"
    },
    {
      "parameters": {
        "endpointUrl": "https://n8n-latest-8nkc.onrender.com/mcp/5d36138e-df3b-4d38-a90f-7087dd3988d6",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.mcpClientTool",
      "typeVersion": 1.2,
      "position": [
        1328,
        592
      ],
      "id": "136dd58e-8968-42fa-843b-2a63df2d94c6",
      "name": "alphatide-n8n-mcp1"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-5",
          "mode": "list",
          "cachedResultName": "gpt-5"
        },
        "options": {
          "reasoningEffort": "low"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        848,
        16
      ],
      "id": "d49dd1d5-4dfc-4aed-9bde-e3f7546a8b52",
      "name": "GPT 5",
      "credentials": {
        "openAiApi": {
          "id": "Q0t7PJoklhQ4ozJr",
          "name": "OPENAI_API_KEY"
        }
      }
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "claude-sonnet-4-5-20250929",
          "mode": "list",
          "cachedResultName": "Claude Sonnet 4.5"
        },
        "options": {
          "thinking": true,
          "thinkingBudget": 1024
        }
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatAnthropic",
      "typeVersion": 1.3,
      "position": [
        864,
        592
      ],
      "id": "484fbca2-2473-442a-8522-d74fa887bacf",
      "name": "Sonnet 4.5",
      "credentials": {
        "anthropicApi": {
          "id": "jmsWHsukOtrZpNDo",
          "name": "ANTHROPIC_API_KEY"
        }
      }
    }
  ],
  "pinData": {},
  "connections": {
    "Alphavantage": {
      "ai_tool": [
        []
      ]
    },
    "AI Agent": {
      "main": [
        []
      ]
    },
    "Alphatide": {
      "ai_tool": [
        []
      ]
    },
    "Webhook": {
      "main": [
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "AI Agent1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres Chat Memory": {
      "ai_memory": [
        [
          {
            "node": "AI Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Postgres Chat Memory1": {
      "ai_memory": [
        [
          {
            "node": "AI Agent1",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Alphatide1": {
      "ai_tool": [
        []
      ]
    },
    "alphatide-n8n-mcp": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "alphatide-n8n-mcp1": {
      "ai_tool": [
        [
          {
            "node": "AI Agent1",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "GPT 5": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Sonnet 4.5": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent1",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1",
    "timezone": "America/New_York",
    "callerPolicy": "workflowsFromSameOwner",
    "availableInMCP": false
  },
  "versionId": "5ea8b5e8-69c6-45c2-8b69-c61336ca239d",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "60ab01500605170cd2b3ab7e56f46cba933419ad4cf4f4372e1f7613fd79e270"
  },
  "id": "GffxalqzC7dv0dJZ",
  "tags": []
}